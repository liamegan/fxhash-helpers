{"version":3,"file":"index.module.js","sources":["../src/index.js"],"sourcesContent":["/**\n * Basic usage for this library is to import the FXInit function and then any of the other functions you might need.\n * eg:\n * ```\n * import { FXInit, FXRandomBetween } from 'fx-helpers';\n * \n * FXInit(fxhash); // Always init the helpers with the hash provided by the boilerplate.\n * \n * const randomAngle = FXRandomBetween(-Math.PI, Math.PI);\n * \n * ```\n */\n\n\nlet fxrand;\n\n/**\n * Initialises the library with a PRNG function. Most functions expect the PRNG to return 0-1 exclusive.\n * @param prng - The PRNG function to use for subsequent calls\n */\nexport const FXInit = function(prng) {\n  if(typeof(prng) === 'function') fxrand = prng;\n}\n\n/**\n * Checks for the existance of the FXHash PRNG and throws an error if it doesn't exist.\n */\nconst check = function() {\n  if (typeof fxrand !== \"function\")\n    throw new Error(\"fxhash has not been defined, did you call FXInit?\");\n}\n\n/**\n * Returns a random float between two numbers.\n * ```\n * FXRandomBetween(-10, 10); // -1.234576\n * ```\n * @param min - The minimum value\n * @param max - The maximum value\n */\nexport const FXRandomBetween = (min, max) => {\n  check();\n  return min + (max - min) * fxrand();\n};\n\n/**\n * Returns a random integer between two numbers.\n * ```\n * FXRandomBetween(-10, 10); // 2\n * ```\n * @param min - The minimum value\n * @param max - The maximum value\n */\nexport const FXRandomIntBetween = (min, max) => {\n  check();\n  return Math.floor(FXRandomBetween(min, max));\n};\n\n\n/**\n * Returns a random integer between two numbers.\n * ```\n * FXRandomOption([\"I\", \"are\", \"weasel\"]); // \"weasel\"\n * ```\n * @param options - An array of options to choose from\n */\nexport const FXRandomOption = function (options) {\n  check();\n  return options[Math.floor(fxrand() * options.length)];\n};\n\n\n/**\n * Returns a random boolean given a weight.\n * ```\n * FXRandomBool(.2); // false\n * ```\n * @param weight=.5 - A weight to test the boolean against, if fxrand is less than this number, true is returned. Defaults to 0.5\n */\nexport const FXRandomBool = function(weight) {\n  check();\n  if (isNaN(weight)) weight = .5;\n  return fxrand() < weight;\n};\n\n/**\n * Returns a vec2, expressed as an array, populated with random numbers \n * ```\n * FXRandVec2(); // [.1234, .57351]\n * ```\n */\nexport const FXRandVec2 = () => {\n  check();\n  return [fxrand(), fxrand()];\n};\n/**\n * Returns a vec3, expressed as an array, populated with random numbers \n * ```\n * FXRandVec3(); // [.1234, .57351, .01234]\n * ```\n */\nexport const FXRandVec3 = () => {\n  check();\n  return [fxrand(), fxrand(), fxrand()];\n};\n/**\n * Returns a vec4, expressed as an array, populated with random numbers \n * ```\n * FXRandVec4(); // [.1234, .57351, .01234, .9634]\n * ```\n */\nexport const FXRandVec4 = () => {\n  check();\n  return [fxrand(), fxrand(), fxrand(), fxrand()];\n};\n\n/**\n * Returns a weighted random option, given an array of options with weights.\n * ```\n * let color = getWeightedOption([\n *   [\"red\", 10],\n *   [\"green\", 30],\n *   [\"blue\", 50],\n * ]);\n * ```\n * Curtesy Mark Knol, T: @mknol\n * @param options - options in the format of [ [ string: optionName, int: optionNumber ] ]\n */\nconst pick = (arr) => arr[(fxrand() * arr.length) | 0];\nexport const getWeightedOption = function (options) {\n  check();\n  let choices = [];\n  for (let i in options)\n    choices = choices.concat(new Array(options[i][1]).fill(options[i][0]));\n  return pick(choices);\n};"],"names":["fxrand","FXInit","prng","check","Error","FXRandomBetween","min","max","FXRandomIntBetween","Math","floor","FXRandomOption","options","length","FXRandomBool","weight","isNaN","FXRandVec2","FXRandVec3","FXRandVec4","getWeightedOption","arr","choices","i","concat","Array","fill"],"mappings":"AAcA,IAAIA,EAMSC,EAAS,SAASC,GACT,mBAAVA,IAAsBF,EAASE,IAMrCC,EAAQ,WACZ,GAAsB,mBAAXH,EACT,UAAUI,MAAM,sDAWPC,EAAkB,SAACC,EAAKC,GAEnC,OADAJ,IACOG,GAAOC,EAAMD,GAAON,KAWhBQ,EAAqB,SAACF,EAAKC,GAEtC,OADAJ,IACOM,KAAKC,MAAML,EAAgBC,EAAKC,KAW5BI,EAAiB,SAAUC,GAEtC,OADAT,IACOS,EAAQH,KAAKC,MAAMV,IAAWY,EAAQC,UAWlCC,EAAe,SAASC,GAGnC,OAFAZ,IACIa,MAAMD,KAASA,EAAS,IACrBf,IAAWe,GASPE,EAAa,WAExB,OADAd,IACO,CAACH,IAAUA,MAQPkB,EAAa,WAExB,OADAf,IACO,CAACH,IAAUA,IAAUA,MAQjBmB,EAAa,WAExB,OADAhB,IACO,CAACH,IAAUA,IAAUA,IAAUA,MAgB3BoB,EAAoB,SAAUR,GACzCT,IACA,IAHYkB,EAGRC,EAAU,GACd,IAAK,IAAIC,KAAKX,EACZU,EAAUA,EAAQE,OAAO,IAAIC,MAAMb,EAAQW,GAAG,IAAIG,KAAKd,EAAQW,GAAG,KACpE,OANYF,EAMAC,GANatB,IAAWqB,EAAIR,OAAU"}